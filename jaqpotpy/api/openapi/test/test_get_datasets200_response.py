# coding: utf-8

"""
    Jaqpot API

    A modern RESTful API for model management and prediction services, built using Spring Boot and Kotlin. Supports seamless integration with machine learning workflows.

    The version of the OpenAPI document: 1.0.0
    Contact: upci.ntua@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jaqpotpy.api.openapi.models.get_datasets200_response import GetDatasets200Response

class TestGetDatasets200Response(unittest.TestCase):
    """GetDatasets200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDatasets200Response:
        """Test GetDatasets200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDatasets200Response`
        """
        model = GetDatasets200Response()
        if include_optional:
            return GetDatasets200Response(
                content = [
                    jaqpotpy.api.openapi.models.dataset.Dataset(
                        id = 1, 
                        type = 'PREDICTION', 
                        entry_type = 'ARRAY', 
                        input = [
                            null
                            ], 
                        result = [
                            null
                            ], 
                        status = 'CREATED', 
                        failure_reason = '', 
                        user_id = '', 
                        model_id = 56, 
                        model_name = '', 
                        executed_at = '', 
                        execution_finished_at = '', 
                        created_at = '', 
                        updated_at = '', )
                    ],
                total_elements = 56,
                total_pages = 56,
                page_size = 56,
                page_number = 56
            )
        else:
            return GetDatasets200Response(
        )
        """

    def testGetDatasets200Response(self):
        """Test GetDatasets200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
