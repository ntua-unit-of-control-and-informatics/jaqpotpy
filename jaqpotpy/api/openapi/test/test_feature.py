# coding: utf-8

"""
    Jaqpot API

    A modern RESTful API for model management and prediction services, built using Spring Boot and Kotlin. Supports seamless integration with machine learning workflows.

    The version of the OpenAPI document: 1.0.0
    Contact: upci.ntua@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jaqpotpy.api.openapi.models.feature import Feature

class TestFeature(unittest.TestCase):
    """Feature unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Feature:
        """Test Feature
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Feature`
        """
        model = Feature()
        if include_optional:
            return Feature(
                id = 1,
                meta = {
                    'key' : None
                    },
                key = 'feature-key',
                name = 'A feature name',
                units = 'A feature unit',
                description = '',
                feature_type = 'FLOAT',
                feature_dependency = 'DEPENDENT',
                visible = True,
                possible_values = [
                    jaqpotpy.api.openapi.models.feature_possible_value.FeaturePossibleValue(
                        key = 'value', 
                        value = 'value', )
                    ],
                created_at = '2023-01-01T12:00Z',
                updated_at = '2023-01-01T12:00:00Z'
            )
        else:
            return Feature(
                key = 'feature-key',
                name = 'A feature name',
                feature_type = 'FLOAT',
        )
        """

    def testFeature(self):
        """Test Feature"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
